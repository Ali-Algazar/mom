// jobs/notificationScheduler.js

const cron = require('node-cron');
const { addDays, startOfDay, endOfDay } = require('date-fns');
const ChildVaccination = require('../models/childVaccinationModel');
// --- (1. ุงุณุชูุฑุงุฏ ูุงุฆู admin ุงูุฑุฆูุณู ูู ุงููููููุฌ) ---
const admin = require('../config/firebaseAdmin');
const NotificationLog = require('../models/notificationLogModel');
const mongoose = require('mongoose');

const sendVaccinationReminders = async () => {
  console.log('--- [Cron Job]: ุจุฏุก ูููุฉ ุงูุจุญุซ ุนู ุชุฐููุฑุงุช ุงูุชุทุนููุงุช ---');

  // --- (2. ุงูุชุฃูุฏ ุฅู ุฎุฏูุฉ ุงููุฑุงุณูุฉ ููุฌูุฏุฉ) ---
  if (!admin || !admin.messaging) {
      console.error('--- [Cron Job]: Firebase Admin or Messaging service is not initialized! Skipping job. ---');
      return;
  }

  if (mongoose.connection.readyState !== 1) {
    console.error('--- [Cron Job]: ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ูุจู ุจุฏุก ุงููููุฉ ---');
    return;
  }

  const targetDate = addDays(new Date(), 3);
  const targetStart = startOfDay(targetDate);
  const targetEnd = endOfDay(targetDate);

  try {
    const upcomingVaccinations = await ChildVaccination.find({
      dueDate: { $gte: targetStart, $lte: targetEnd },
      status: 'pending',
    })
      .populate('parent', 'fcmToken name _id')
      .populate('child', 'name')
      .populate('vaccine', 'name');

    if (!upcomingVaccinations || upcomingVaccinations.length === 0) {
      console.log('--- [Cron Job]: ูุง ุชูุฌุฏ ุชุทุนููุงุช ูุฅุฑุณุงู ุฅุดุนุงุฑุงุช ููุง ุงูููู ---');
      return;
    }
    console.log(`--- [Cron Job]: ุชู ุงูุนุซูุฑ ุนูู ${upcomingVaccinations.length} ุชุทุนูู ูุณุชุญู ---`);

    for (const job of upcomingVaccinations) {
      if (job.parent && job.parent.fcmToken) {
        const message = {
          notification: {
            title: 'ุชุฐููุฑ ุจููุนุฏ ุชุทุนูู ๐',
            body: `ูุฑุญุจุงู ${job.parent.name}ุ ูุฐุง ุชุฐููุฑ ุจุฃู ููุนุฏ ุชุทุนูู "${job.vaccine.name}" ูุทููู "${job.child.name}" ุจุนุฏ 3 ุฃูุงู.`,
          },
          token: job.parent.fcmToken, // Note: Use 'token' for send
        };

        try {
          // --- (3. ุงุณุชุฎุฏุงู admin.messaging().send() ูุจุงุดุฑุฉ) ---
          await admin.messaging().send(message);
          console.log(`โ ุชู ุฅุฑุณุงู ุฅุดุนุงุฑ ุฅูู ${job.parent.name} ุจูุฌุงุญ`);
          await NotificationLog.create({
            user: job.parent._id,
            status: 'success',
            notificationTitle: message.notification.title,
            notificationBody: message.notification.body,
          });
        } catch (error) {
          console.error(`โ ูุดู ุฅุฑุณุงู ุงูุฅุดุนุงุฑ ุฅูู ${job.parent.name}:`, error.message);
          await NotificationLog.create({
            user: job.parent._id,
            status: 'failed',
            errorMessage: error.message,
            notificationTitle: message.notification.title,
            notificationBody: message.notification.body,
          });
        }
      } else {
         if(job.parent) {
             await NotificationLog.create({
                 user: job.parent._id,
                 status: 'failed',
                 errorMessage: 'User does not have an FCM token registered.',
                 notificationTitle: 'ุชุฐููุฑ ุจููุนุฏ ุชุทุนูู ๐',
                 notificationBody: `ุชุฐููุฑ ุจุชุทุนูู "${job.vaccine.name}" ูุทููู "${job.child.name}"`,
             });
         }
      }
    }
  } catch (error) {
    if (error.name === 'MongooseError' && error.message.includes('buffering timed out')) {
        console.error('--- [Cron Job]: ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุฃุซูุงุก ุงูุจุญุซ ---', error.message);
    } else {
        console.error('--- [Cron Job]: ุญุฏุซ ุฎุทุฃ ูุงุฏุญ ูู ูููุฉ ุงูุฅุดุนุงุฑุงุช ---', error);
    }
  }
};

cron.schedule('0 9 * * *', () => { // (ุชุฃูุฏ ุฃู ูุฐุง ูู ุงูุชูููุช ุงูุฐู ุชุฑูุฏู)
  sendVaccinationReminders();
}); // (ุจุฏูู ุฎูุงุฑ ุงูููุทูุฉ ุงูุฒูููุฉ)

console.log('โฐ ุชู ุฌุฏููุฉ "ุณุงุนู ุงูุจุฑูุฏ" (ุงูุฅุดุนุงุฑุงุช) ููุนูู ูู ููู ุงูุณุงุนุฉ 9 ุตุจุงุญุงู ูุน ุชุณุฌูู ุงูุญุงูุฉ');

module.exports = { sendVaccinationReminders };